// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import { PlasmicAuthComponent } from "./plasmic/bobre_kurwa/PlasmicAuthComponent";
import { supabase } from "@/utils/supabaseClient";
import { useRouter } from "next/router";

function AuthComponent_(props, ref) {
  const router = useRouter()
  const [email, setEmail] = React.useState('')
  const [password, setPassword] = React.useState('')
  const [authError, SetAuthError] = React.useState(null)
  const [loading, setLoading] = React.useState(false)

  return (
    <PlasmicAuthComponent
      root={{ ref }}
      {...props}
      emailInput={{
        value: email,
        onchange: (e) => setEmail(e.target.value)
      }}
      passwordInput={{
        value: password,
        onchange: (e) => setPassword(e.target.value)
      }}
      submitButton={{
        onclick: async () => {
          setLoading(true)
          SetAuthError(null)

          try {
            let authFunction = null
            if (props.isSignUpFlow) {
              authFunction = await supabase.auth.signUp({ email, password })
            }

            else {
              authFunction = await supabase.auth.signInWithIdToken({ email, password })
            }

            const { error } = authFunction
            if (error) {
              SetAuthError(err)
              return
            }

            router.replace("/")
          } catch (err) {
            SetAuthError(err)
          } finally {
            setLoading(false)
          }
        }
      }}
    />
  );
}

const AuthComponent = React.forwardRef(AuthComponent_);

export default AuthComponent;
